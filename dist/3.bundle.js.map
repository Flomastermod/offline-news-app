{"version":3,"sources":["webpack:///./assets/images/placeholder.png","webpack:///./src/utils/index.js","webpack:///./src/components/articles/index.js"],"names":["module","exports","__webpack_require__","p","DOMContentLoaded","lazyImages","slice","call","document","querySelectorAll","window","IntersectionObserverEntry","prototype","length","lazyImageObserver","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","lazyImage","target","src","dataset","srcset","classList","remove","unobserve","observe","lazyImageObserverFunc","img","Article","React","PureComponent","article","this","context","react_default","a","createElement","className","alt","data-src","urlToImage","data-srcset","placeholder","href","url","title","description","ArticleContext","memo"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2GCmBjC,IAAMC,EAAmB,WAE5B,IAAIC,EAAa,GAAGC,MAAMC,KAAKC,SAASC,iBAAiB,aAErD,yBAA0BC,QAAU,8BAA+BA,QAAU,sBAAuBA,OAAOC,0BAA0BC,UAClIP,EAAWQ,QAvBtB,SAA+BR,GAC9B,IAAIS,EAAoB,IAAIC,qBAAqB,SAASC,EAASC,GAC9DD,EAAQE,QAAQ,SAASC,GACvB,GAAIA,EAAMC,eAAgB,CACxB,IAAIC,EAAYF,EAAMG,OACtBD,EAAUE,IAAMF,EAAUG,QAAQD,IAClCF,EAAUI,OAASJ,EAAUG,QAAQC,OACrCJ,EAAUK,UAAUC,OAAO,QAC3Bb,EAAkBc,UAAUP,QAKlChB,EAAWa,QAAQ,SAASG,GAC1BP,EAAkBe,QAAQR,KAUpBS,CAAsBzB,GAGvBA,EAAWQ,QACVR,EAAWa,QAAQ,SAASa,GACxBA,EAAIR,IAAMQ,EAAIP,QAAQD,IACtBQ,EAAIN,OAASM,EAAIP,QAAQC,OACzBM,EAAIL,UAAUC,OAAO,m1BCzB/BK,gaAAgBC,IAAMC,iEAKpB9B,qCAIA,IAAI+B,EAAUC,KAAKC,QAEnB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAI,aAAaC,WAAUR,EAAQS,WAAYC,cAAaV,EAAQS,WAAYrB,IAAKuB,MAC3GR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGO,KAAMZ,EAAQa,KAAMb,EAAQc,QACnCX,EAAAC,EAAAC,cAAA,SAAIL,EAAQe,sDAhB1BlB,oBAEmBmB,iGAqBVlB,cAAMmB,KAAKpB","file":"3.bundle.js","sourcesContent":["module.exports = __webpack_public_path__ + \"1d42c05fa21f456f4cc6711cfe8e4556.png\";","// Lazy loadin Image IntersectionObserver\nfunction lazyImageObserverFunc(lazyImages) {\n\tlet lazyImageObserver = new IntersectionObserver(function(entries, observer) {\n      entries.forEach(function(entry) {\n        if (entry.isIntersecting) {\n          let lazyImage = entry.target;\n          lazyImage.src = lazyImage.dataset.src;\n          lazyImage.srcset = lazyImage.dataset.srcset;\n          lazyImage.classList.remove(\"lazy\");\n          lazyImageObserver.unobserve(lazyImage);\n\t\t}\n      });\n    });\n\n    lazyImages.forEach(function(lazyImage) {\n      lazyImageObserver.observe(lazyImage);\n    });\t\n}\n\nexport const DOMContentLoaded = () => {\n            \n    let lazyImages = [].slice.call(document.querySelectorAll(\"img.lazy\"));\n\n    if (\"IntersectionObserver\" in window && \"IntersectionObserverEntry\" in window && \"intersectionRatio\" in window.IntersectionObserverEntry.prototype) {\n        if(lazyImages.length) {\n            lazyImageObserverFunc(lazyImages);\n        }   \n    } else {\n        if(lazyImages.length) {\n            lazyImages.forEach(function(img) {\n                img.src = img.dataset.src;\n                img.srcset = img.dataset.srcset;\n                img.classList.remove(\"lazy\");\n            });\t\n        }   \n    }\n}\n","import React, { Component } from 'react'\n\nimport { ArticleContext } from \"../../context/article\";\nimport {DOMContentLoaded} from \"../../utils/index\";\nimport placeholder from \"../../../assets/images/placeholder.png\";\nimport style from './index.css';\n\nclass Article extends React.PureComponent {\n    \n    static contextType = ArticleContext;\n\n    componentDidMount() {\n        DOMContentLoaded();\n    }\n    \n    render() {\n        let article = this.context;\n\n        return (\n            <div className=\"article\">\n                <img className=\"lazy\" alt=\"news-image\" data-src={article.urlToImage} data-srcset={article.urlToImage} src={placeholder} />\n                <div className=\"info\">\n                    <h2><a href={article.url}>{article.title}</a></h2>\n                    <p>{article.description }</p>\n                </div>\n            </div>\n        )  \n    }\n}\n\nexport default React.memo(Article);"],"sourceRoot":""}